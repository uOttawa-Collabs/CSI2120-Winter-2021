import matplotlib.pyplot as plot
import numpy

y1 = numpy.array([436.039403, 268.039438, 212.613442, 215.818073, 190.936342, 189.820632, 187.487618, 142.796324, 120.574449, 122.191642, 119.624935, 120.302360, 121.328055, 126.571314, 124.666824, 124.417287, 122.312101, 120.066095, 119.798664, 120.416143, 120.238223, 117.415731, 114.424031, 120.402242, 116.671640, 117.272780, 116.614486, 115.690627, 115.332730, 114.043500, 116.005548, 117.329768, 117.437588, 122.605289, 124.203260, 121.115042, 123.172079, 125.520817, 122.161038, 122.769271, 123.560539], dtype=numpy.float32)

y2 = numpy.array([409.651735, 264.816964, 212.346911, 213.340183, 192.240195, 188.559046, 170.031252, 143.908353, 126.379169, 120.735929, 120.805282, 121.178299, 119.119124, 119.042600, 118.872246, 119.277002, 122.671404, 115.184060, 117.961751, 117.397732, 116.317024, 117.172315, 115.391058, 116.100978, 112.042000, 115.781792, 113.933756, 116.872702, 115.248971, 115.283036, 117.060847, 115.217077, 116.098660, 119.465782, 117.105987, 116.725181, 120.787397, 120.898709, 121.489028, 123.016151, 125.868742], dtype=numpy.float32)

y3 = numpy.array([413.362853, 271.031072, 216.969055, 215.606714, 194.016975, 188.345209, 170.604038, 141.197551, 120.783138, 124.726587, 124.445857, 123.645511, 122.383784, 122.031053, 122.368930, 121.503775, 122.303099, 117.343179, 118.760595, 118.545601, 116.012455, 119.009099, 119.661673, 116.453419, 116.648139, 118.886307, 119.953920, 118.617951, 120.903854, 122.467632, 122.916472, 121.294561, 118.287183, 122.008561, 125.625853, 122.364610, 125.033255, 126.705900, 127.849261, 129.760551, 134.553976], dtype=numpy.float32)

y = (y1 + y2 + y3) / 3

xr = list(range(0, 41))
xt = [2 ** i for i in range(0, 41)]


plot.title("Runtime-forkdepth Figure")
plot.xlabel("Forkdepth/times")
plot.ylabel("Runtime/seconds")
plot.plot(xr, y)

minXcoord = numpy.argmin(y)
minYcoord = y[minXcoord]

plot.annotate(
    r"Minimum: (%d, %f)" % (minXcoord, minYcoord),
    xy = (minXcoord, minYcoord),
    xytext = (+30, +30),
    textcoords = "offset points",
    fontsize = 12,
    arrowprops = dict(arrowstyle = "->", connectionstyle = "arc3, rad = .2")
)

optMinX = 8
optMinY = y[optMinX]
plot.annotate(
    r"Optimal minimum: (%d, %f)" % (optMinX, optMinY),
    xy = (optMinX, optMinY),
    xytext = (+30, +60),
    textcoords = "offset points",
    fontsize = 12,
    arrowprops = dict(arrowstyle = "->", connectionstyle = "arc3, rad = .2")
)

plot.show()
